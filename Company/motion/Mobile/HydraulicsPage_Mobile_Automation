# This selenium script for Mobile was created by Jim ORourke on 7/3/2023
# It is only for FYI Purposes only and to showcase Automation abilities to potiential employers

# This script uses the Motion mobile app as its basis. It is non descrutive maining it does not add anything
# to a shopping cart or register any users it is only for informational purposes and can be used by anybody for that sole purpose
# 
# How it works: Do you need to figure out a way to scroll in selenium. Check out Step 3
# The test case that this automation script was built off of is included at the bottom of this script
# Just match up the Step number comments in the script to the test case number in the comments section at the bottom of this script
# Also, check out the YouTube channel 369TechMedia @369TechMedia for additional testing information and you will even get to see my ugly mug. Can't say you haven't been warned :)
# The Mobile script of this test case can be located in the \Motions\ folder in the Github repository where this script was located.
# Happy Testing all

# This selenium script was created in OS Win 11, Intelli J, Python, Selenium
# At creation of this script all web element locators were valid. You may need to tweak if you cut an paste this script


from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from appium import webdriver

desired_caps = {
    'platformName': 'Android',  # Or 'iOS' for iOS devices
    'deviceName': 'Your Device Name',  # Replace with the name of your device/emulator
    'appPackage': 'com.example.myapp',  # Replace with the actual package name of your app
    'appActivity': 'com.example.myapp.MainActivity'  # Replace with the actual main activity of your app
}

driver = webdriver.Remote('http://localhost:4723/wd/hub', desired_caps


# Step 1: Go to https://www.motion.com/
driver = webdriver.Chrome()  # Assuming you have Chrome WebDriver installed
driver.get("https://www.motion.com/")

# Verify if Motion home page is loaded
expected_title = "Motion"
assert expected_title in driver.title, "Motion home page is not loaded."

# Step 2: Click on the Hydraulics link
hydraulics_link = driver.find_element(By.LINK_TEXT, "Hydraulics")
hydraulics_link.click()

# Verify if the user is redirected to https://www.motion.com/products/Hydraulics
expected_url = "https://www.motion.com/products/Hydraulics"
WebDriverWait(driver, 10).until(EC.url_to_be(expected_url)), "User is not redirected to Hydraulics page."

# Step 3: Scroll down to the first item that can be added to the shopping cart
first_item = driver.find_element(By.CSS_SELECTOR, ".product-item")
driver.execute_script("arguments[0].scrollIntoView(true);", first_item)

# Verify if the first item is viewable
assert first_item.is_displayed(), "First item is not viewable."

# Step 4: Click on the add to shopping cart button
add_to_cart_button = first_item.find_element(By.CLASS_NAME, "add-to-cart-button")
add_to_cart_button.click()

# Verify if "1 Item added to cart" pop-up is displayed
cart_popup = WebDriverWait(driver, 10).until(EC.visibility_of_element_located((By.CLASS_NAME, "cart-popup")))
expected_text = "1 Item added to cart"
assert expected_text in cart_popup.text, "1 Item added to cart pop-up is not displayed."

# Close the browser
driver.quit()

# +++++++++++++ Begin Test Case Script ++++++++++++++++++++++++++++++++++++++
# Step Number,Step to Perform ,Expected Results
# Step 1,Go to https://www.motion.com/,Motion home page is loaded
# Step 2,Click on the Hydraulics link,The user is redirected to https://www.motion.com/products/Hydraulics
# Step 3,Scroll down to the first item that can be added to the shopping cart,First item is viewable
# Step 4,Click on the add to shopping cart button,1 Item added to cart pop up is displayed
# ++++++++++++++++++ End Test Case script ++++++++++++++++++++++++++++++++++++++++
